C51 COMPILER V9.60.7.0   MAINC                                                             01/07/2025 21:55:08 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAINC
OBJECT MODULE PLACED IN .\Objects\mainc.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE mainc.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\mai
                    -nc.lst) TABS(2) OBJECT(.\Objects\mainc.obj)

line level    source

   1          #include <reg51.h>
   2          #include <string.h>
   3          #include <stdio.h>
   4          
   5          #define LCDPORT P1
   6          
   7          sbit rs = P1^0;
   8          sbit rw = P1^1;
   9          sbit en = P1^2;
  10          sbit Motor1 = P2^4;
  11          sbit Motor2 = P2^3;
  12          sbit Speaker = P2^6;
  13          
  14          char rfid[13], ch = 0; // Buffer to store RFID
  15          int counter1 = 0, counter2 = 0, counter3 = 0;
  16          unsigned char result[5]; // Buffer for formatted attendance count
  17          int i; // Declare the loop variable globally or outside the loop
  18          
  19          // Function Prototypes
  20          void delay(int itime);
  21          void daten(void);
  22          void lcddata(unsigned char ch);
  23          void cmden(void);
  24          void lcdcmd(unsigned char ch);
  25          void lcdstring(char *str);
  26          void lcd_init(void);
  27          void uart_init(void);
  28          char rxdata(void);
  29          
  30          // Delay Function
  31          void delay(int itime) {
  32   1          int i, j;
  33   1          for (i = 0; i < itime; i++)
  34   1              for (j = 0; j < 1275; j++);
  35   1      }
  36          
  37          // LCD Data Enable
  38          void daten() {
  39   1          rs = 1;
  40   1          rw = 0;
  41   1          en = 1;
  42   1          delay(5);
  43   1          en = 0;
  44   1      }
  45          
  46          // Send Data to LCD
  47          void lcddata(unsigned char ch) {
  48   1          LCDPORT = ch & 0xf0;
  49   1          daten();
  50   1          LCDPORT = (ch << 4) & 0xf0;
  51   1          daten();
  52   1      }
  53          
  54          // LCD Command Enable
C51 COMPILER V9.60.7.0   MAINC                                                             01/07/2025 21:55:08 PAGE 2   

  55          void cmden() {
  56   1          rs = 0;
  57   1          en = 1;
  58   1          delay(5);
  59   1          en = 0;
  60   1      }
  61          
  62          // Send Command to LCD
  63          void lcdcmd(unsigned char ch) {
  64   1          LCDPORT = ch & 0xf0;
  65   1          cmden();
  66   1          LCDPORT = (ch << 4) & 0xf0;
  67   1          cmden();
  68   1      }
  69          
  70          // Send String to LCD
  71          void lcdstring(char *str) {
  72   1          while (*str) {
  73   2              lcddata(*str++);
  74   2          }
  75   1      }
  76          
  77          // LCD Initialization
  78          void lcd_init(void) {
  79   1          lcdcmd(0x02); // Initialize LCD
  80   1          lcdcmd(0x28); // 4-bit mode, 2-line, 5x7 dots
  81   1          lcdcmd(0x0C); // Display ON, Cursor OFF
  82   1          lcdcmd(0x01); // Clear Display
  83   1      }
  84          
  85          // UART Initialization
  86          void uart_init() {
  87   1          TMOD = 0x20;  // Timer1 in Mode2 (auto-reload)
  88   1          SCON = 0x50;  // 8-bit data, 1 start, 1 stop bit
  89   1          TH1 = 0xFD;   // 9600 baud rate
  90   1          TR1 = 1;      // Start Timer1
  91   1      }
  92          
  93          // Receive Data from UART
  94          char rxdata() {
  95   1          while (!RI);   // Wait for data
  96   1          ch = SBUF;     // Read received data
  97   1          RI = 0;        // Clear RI flag
  98   1          return ch;     // Return the character
  99   1      }
 100          
 101          void main() {
 102   1          // Initialize peripherals
 103   1          Speaker = 1;
 104   1          uart_init();
 105   1          lcd_init();
 106   1      
 107   1          // Welcome Message
 108   1          lcdstring("---RFID Based---");
 109   1          lcdcmd(0xC0);
 110   1          lcdstring("Attendance Proj");
 111   1          delay(500);
 112   1          lcd_init();
 113   1          lcdstring("--EC--");
 114   1          lcdcmd(0xC0);
 115   1          lcdstring("-150--151--168-");
 116   1          delay(400);
C51 COMPILER V9.60.7.0   MAINC                                                             01/07/2025 21:55:08 PAGE 3   

 117   1      
 118   1          while (1) {
 119   2              // Prompt for RFID
 120   2              lcdcmd(1); // Clear Display
 121   2              lcdstring("Scan Your Card:");
 122   2              lcdcmd(0xC0);
 123   2      
 124   2              // Receive RFID input
 125   2              for (i = 0; i < 12; i++) { // Use the globally declared `i`
 126   3                  rfid[i] = rxdata();
 127   3              }
 128   2              rfid[12] = '\0'; // Null-terminate RFID string
 129   2      
 130   2              // Display received RFID
 131   2              lcdcmd(1);
 132   2              lcdstring("Rfid No. is:");
 133   2              lcdcmd(0xC0);
 134   2              lcdstring(rfid);
 135   2              delay(100);
 136   2      
 137   2              // Check RFID and perform actions
 138   2              if (strncmp(rfid, "10035AD856C1", 12) == 0) {
 139   3                  counter1++;
 140   3                  lcdcmd(1);
 141   3                  lcdstring("Attended: 150");
 142   3                  lcdcmd(0xC0);
 143   3                  sprintf(result, "No.: %d", counter1);
 144   3                  lcdstring(result);
 145   3      
 146   3                  // Activate Motor
 147   3                  Motor1 = 1;
 148   3                  Motor2 = 0;
 149   3                  delay(300);
 150   3                  Motor1 = 0;
 151   3                  Motor2 = 1;
 152   3                  delay(300);
 153   3                  Motor1 = 0;
 154   3                  Motor2 = 0;
 155   3              } else if (strncmp(rfid, "1600ADC369A1", 12) == 0) {
 156   3                  counter2++;
 157   3                  lcdcmd(1);
 158   3                  lcdstring("Attended: 151");
 159   3                  lcdcmd(0xC0);
 160   3                  sprintf(result, "No.: %d", counter2);
 161   3                  lcdstring(result);
 162   3      
 163   3                  // Activate Motor
 164   3                  Motor1 = 1;
 165   3                  Motor2 = 0;
 166   3                  delay(300);
 167   3                  Motor1 = 0;
 168   3                  Motor2 = 1;
 169   3                  delay(300);
 170   3                  Motor1 = 0;
 171   3                  Motor2 = 0;
 172   3              } else if (strncmp(rfid, "1600ABCD147A", 12) == 0) {
 173   3                  counter3++;
 174   3                  lcdcmd(1);
 175   3                  lcdstring("Attended: 168");
 176   3                  lcdcmd(0xC0);
 177   3                  sprintf(result, "No.: %d", counter3);
 178   3                  lcdstring(result);
C51 COMPILER V9.60.7.0   MAINC                                                             01/07/2025 21:55:08 PAGE 4   

 179   3      
 180   3                  // Activate Motor
 181   3                  Motor1 = 1;
 182   3                  Motor2 = 0;
 183   3                  delay(300);
 184   3                  Motor1 = 0;
 185   3                  Motor2 = 1;
 186   3                  delay(300);
 187   3                  Motor1 = 0;
 188   3                  Motor2 = 0;
 189   3              } else {
 190   3                  lcdcmd(1);
 191   3                  lcdstring("Card Not Found");
 192   3                  lcdcmd(0xC0);
 193   3                  lcdstring("Try Another");
 194   3                  Speaker = 0;
 195   3                  delay(300);
 196   3                  Speaker = 1;
 197   3              }
 198   2          }
 199   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    639    ----
   CONSTANT SIZE    =    201    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     27       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
